<?php

class fornecedores {

	public function parametros($valor) {
		parse_str($valor, $saida);
		$pagina = isset($saida['pagina']) ? intval($saida['pagina']) : 1;
		$limite = isset($saida['limite']) ? intval($saida['limite']) : 500;
		$PaginaP = ($pagina == 0 ) ? 1 : $pagina;
		$padrao = ($PaginaP - 1) * $limite;
		return array('pagina' => $PaginaP, 'limite' => $limite, 'padrao' => $padrao);
	}

	public function get_listagem() {

		$comandoSQL = 'SELECT uuid_fornecedor AS uuid, nomefan, contato, telefone, celular
		FROM sis_fornecedor';
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetchAll();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		echo json_encode(array('fornecedores' => $resultadosSQL));

	}

	public function get_listar($valor) {
		$parametros = $this->parametros($valor);

		$countSQL = 'SELECT COUNT(*) AS total FROM sis_fornecedor';
		$rotinaCount = DB::prepare($countSQL);
		$rotinaCount -> execute();
		$resultadosCount = $rotinaCount -> fetch();
		$total = intval($resultadosCount->total);
		$totalPaginas = ceil($total / $parametros['limite']);

		$comandoSQL = 'SELECT uuid_fornecedor AS uuid, razaosoc, nomefan, contato, email, cpf_cnpj, rg_ie, tipo, endereco, numero, bairro, cidade, estado, complemento, telefone, celular, fax, cep, crc, obs
		FROM sis_fornecedor
		ORDER BY razaosoc LIMIT :padrao, :limite';

		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('padrao', $parametros['padrao'], PDO::PARAM_INT);
		$rotinaSQL -> bindParam('limite', $parametros['limite'], PDO::PARAM_INT);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetchAll();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		$ConsultaLimite = ($parametros['pagina'] == $totalPaginas) ? $numeroDeLinhas : $parametros['limite'];

		if ($parametros['padrao'] >= $total) {
			echo json_encode(array('mensagem' => 'Pagina atual acima do limite de paginas'));
		} else {
			echo json_encode(array('total_registros' => $total , 'consulta_atual' => $ConsultaLimite, 'pagina_atual' => $parametros['pagina'], 'total_paginas' => $totalPaginas, 'fornecedores' => $resultadosSQL));
		}
	}
	
	public function get_show($valor) {

		$comandoSQL = 'SELECT *
		FROM sis_fornecedor
		WHERE uuid_fornecedor = :uuid
		LIMIT 1';
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('uuid', $valor);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetch();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		echo json_encode($resultadosSQL);

	}

	public function post_inserir($data){

		$razaosoc = $data->razaosoc;
		$nomefan = $data->nomefan;
		$email = $data->email;
		$contato = $data->contato;
		$cpf_cnpj = $data->cpf_cnpj;
		$rg_ie = $data->rg_ie;
		$tipo = $data->tipo;
		$endereco = $data->endereco;
		$numero = $data->numero;
		$bairro = $data->bairro;
		$cidade = $data->cidade;
		$estado = $data->estado;
		$complemento = $data->complemento;
		$telefone = $data->telefone;
		$celular = $data->celular;
		$fax = $data->fax;
		$cep = $data->cep;
		$crc = $data->crc;
		$obs = $data->obs;

		$comandoSQL = "INSERT INTO sis_fornecedor (uuid_fornecedor, razaosoc, nomefan, contato, email, cpf_cnpj, rg_ie, tipo, endereco, numero, bairro, cidade, estado, complemento, telefone, celular, fax, cep, obs, crc)
		VALUES (uuid(), :razaosoc, :nomefan, :contato, :email, :cpf_cnpj, :rg_ie, :tipo, :endereco, :numero, :bairro, :cidade, :estado, :complemento, :telefone, :celular, :fax, :cep, :obs, :crc)";
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('razaosoc', $razaosoc);
		$rotinaSQL -> bindParam('nomefan', $nomefan);
		$rotinaSQL -> bindParam('email', $email);
		$rotinaSQL -> bindParam('contato', $contato);
		$rotinaSQL -> bindParam('cpf_cnpj', $cpf_cnpj);
		$rotinaSQL -> bindParam('rg_ie', $rg_ie);
		$rotinaSQL -> bindParam('tipo', $tipo);
		$rotinaSQL -> bindParam('endereco', $endereco);
		$rotinaSQL -> bindParam('numero', $numero);
		$rotinaSQL -> bindParam('bairro', $bairro);
		$rotinaSQL -> bindParam('cidade', $cidade);
		$rotinaSQL -> bindParam('estado', $estado);
		$rotinaSQL -> bindParam('complemento', $complemento);
		$rotinaSQL -> bindParam('telefone', $telefone);
		$rotinaSQL -> bindParam('celular', $celular);
		$rotinaSQL -> bindParam('fax', $fax);
		$rotinaSQL -> bindParam('cep', $cep);
		$rotinaSQL -> bindParam('crc', $crc);
		$rotinaSQL -> bindParam('obs', $obs);
		$rotinaSQL->execute();

		echo  json_encode(array('status' => 'sucesso', 'mensagem' => 'Fornecedor inserido com sucesso'));

	}

	public function put_editar($data){

		$razaosoc = $data->razaosoc;
		$nomefan = $data->nomefan;
		$email = $data->email;
		$contato = $data->contato;
		$cpf_cnpj = $data->cpf_cnpj;
		$rg_ie = $data->rg_ie;
		$tipo = $data->tipo;
		$endereco = $data->endereco;
		$numero = $data->numero;
		$bairro = $data->bairro;
		$cidade = $data->cidade;
		$estado = $data->estado;
		$complemento = $data->complemento;
		$telefone = $data->telefone;
		$celular = $data->celular;
		$fax = $data->fax;
		$cep = $data->cep;
		$crc = $data->crc;
		$obs = $data->obs;
		$uuid = $data->uuid;

		$comandoSQL = "UPDATE sis_fornecedor
		SET razaosoc = :razaosoc, nomefan = :nomefan, contato = :contato, email = :email, cpf_cnpj = :cpf_cnpj, rg_ie = :rg_ie, tipo = :tipo, endereco = :endereco, numero = :numero, bairro = :bairro, cidade = :cidade, estado = :estado, complemento = :complemento, telefone = :telefone, celular = :celular, fax = :fax, cep = :cep, crc = :crc, obs = :obs
		WHERE uuid_fornecedor = :uuid";
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('razaosoc', $razaosoc);
		$rotinaSQL -> bindParam('nomefan', $nomefan);
		$rotinaSQL -> bindParam('email', $email);
		$rotinaSQL -> bindParam('contato', $contato);
		$rotinaSQL -> bindParam('cpf_cnpj', $cpf_cnpj);
		$rotinaSQL -> bindParam('rg_ie', $rg_ie);
		$rotinaSQL -> bindParam('tipo', $tipo);
		$rotinaSQL -> bindParam('endereco', $endereco);
		$rotinaSQL -> bindParam('numero', $numero);
		$rotinaSQL -> bindParam('bairro', $bairro);
		$rotinaSQL -> bindParam('cidade', $cidade);	
		$rotinaSQL -> bindParam('estado', $estado);
		$rotinaSQL -> bindParam('complemento', $complemento);
		$rotinaSQL -> bindParam('telefone', $telefone);
		$rotinaSQL -> bindParam('celular', $celular);
		$rotinaSQL -> bindParam('fax', $fax);
		$rotinaSQL -> bindParam('cep', $cep);
		$rotinaSQL -> bindParam('crc', $crc);
		$rotinaSQL -> bindParam('obs', $obs);
		$rotinaSQL -> bindParam('uuid', $uuid);
		$rotinaSQL ->	execute();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		if($numeroDeLinhas > 0){
			echo json_encode(array('status' => 'sucesso', 'mensagem' => 'Fornecedor editado com sucesso'));
		} else {
			echo json_encode(array('status' => 'erro', 'mensagem' => 'Fornecedor não encontrado'));
		}
	}

	public function delete_id($key) {

		$comandoSQL = 'DELETE FROM sis_fornecedor
		WHERE uuid_fornecedor = :uuid';
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('uuid', $key);
		$rotinaSQL -> execute();
		$numeroDeLinhas = $rotinaSQL -> rowCount();
		
		if ($numeroDeLinhas > 0) {
			echo json_encode(array('status' => 'sucesso', 'mensagem' => 'Registro excluido com sucesso'));
		} else {
			echo json_encode(array('status' => 'erro', 'mensagem' => 'Registro não encontrado'));
		}

	}

}
