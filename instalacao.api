<?php

class instalacao {

	public function parametros($valor) {
		parse_str($valor, $saida);
		$pagina = isset($saida['pagina']) ? intval($saida['pagina']) : 1;
		$limite = isset($saida['limite']) ? intval($saida['limite']) : 500;
		$PaginaP = ($pagina == 0 ) ? 1 : $pagina;
		$padrao = ($PaginaP - 1) * $limite;
		return array('pagina' => $PaginaP, 'limite' => $limite, 'padrao' => $padrao);
	}

	public function get_listagem() {

		$comandoSQL = "SELECT id, uuid_solic AS uuid, login, senha, email, nome
		FROM sis_solic
		WHERE tipo <> 'assinatura'";
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetchAll();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		echo json_encode(array('instalacoes' => $resultadosSQL));

	}

	public function get_listar($valor) {
		$parametros = $this->parametros($valor);

		$countSQL = 'SELECT COUNT(*) AS total FROM sis_solic WHERE tipo <> "assinatura"';
		$rotinaCount = DB::prepare($countSQL);
		$rotinaCount -> execute();
		$resultadosCount = $rotinaCount -> fetch();
		$total = intval($resultadosCount->total);
		$totalPaginas = ceil($total / $parametros['limite']);

		$comandoSQL = 'SELECT id, uuid_solic AS uuid, login, senha, email, nome, cpf, rg, data_nasc, endereco, numero, bairro, cidade, estado, cep, telefone, celular, obs, tipo, visita, tecnico, status, visitado, instalado, datainst, concluido
		FROM sis_solic
		WHERE tipo <> "assinatura"
		ORDER BY id LIMIT :padrao, :limite';

		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('padrao', $parametros['padrao'], PDO::PARAM_INT);
		$rotinaSQL -> bindParam('limite', $parametros['limite'], PDO::PARAM_INT);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetchAll();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		$ConsultaLimite = ($parametros['pagina'] == $totalPaginas) ? $numeroDeLinhas : $parametros['limite'];

		if ($parametros['padrao'] >= $total) {
			echo json_encode(array('mensagem' => 'Pagina atual acima do limite de paginas'));
		} else {
			echo json_encode(array('total_registros' => $total, 'consulta_atual' => $ConsultaLimite, 'pagina_atual' => $parametros['pagina'], 'total_paginas' => $totalPaginas, 'instalacoes' => $resultadosSQL));
		}
	}

	public function get_show($valor) {

		$comandoSQL = 'SELECT *
		FROM sis_solic
		WHERE id = :instalacao OR uuid_solic = :instalacao
		LIMIT 1';
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('instalacao', $valor);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetch();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		echo json_encode($resultadosSQL);

	}

	public function get_fechar($key){

		$comandoSQL = "UPDATE sis_solic
		SET datainst = NOW(), visitado = 'sim', instalado = 'sim', concluido = 'xxx', status = 'concluido'
		WHERE uuid_solic = :uuid";

		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam(':uuid', $key);
		$rotinaSQL -> execute();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		if ($numeroDeLinhas > 0) {
			echo json_encode(array('status' => 'sucesso', 'mensagem' => 'Registro fechado com sucesso'));
		} else {
			echo json_encode(array('status' => 'erro', 'mensagem' => 'Registro não encontrado'));
		}

	}

	public function post_inserir($data) {

		$nome = $data -> nome;
		$login = $data -> login;
		$senha = $data -> senha;
		$email = $data -> email;
		$cpf = $data -> cpf;
		$rg = $data -> rg;
		$data_nasc = $data -> data_nasc;
		$endereco = $data -> endereco;
		$bairro = $data -> bairro;
		$complemento = $data -> complemento;
		$cidade = $data -> cidade;
		$estado = $data -> estado;
		$cep = $data -> cep;
		$telefone = $data -> telefone;
		$celular = $data -> celular;
		$numero = $data -> numero;

		$comandoSQL = "INSERT INTO sis_solic
		(uuid_solic, nome, login, senha, email, cpf, rg, data_nasc, endereco, bairro, complemento, cidade, estado, cep, telefone, celular, numero, tipo, obs, tecnico, visita)
		VALUES
		(uuid(), :nome, :login, :senha, :email, :cpf, :rg, :data_nasc, :endereco, :bairro, :complemento, :cidade, :estado, :cep, :telefone, :celular, :numero, 'instalacao', 'API', 'nenhum', DATE_ADD(DATE(NOW()), INTERVAL 2 DAY))";

		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam(':nome', $nome);
		$rotinaSQL -> bindParam(':login', $login);
		$rotinaSQL -> bindParam(':senha', $senha);
		$rotinaSQL -> bindParam(':email', $email);
		$rotinaSQL -> bindParam(':cpf', $cpf);
		$rotinaSQL -> bindParam(':rg', $rg);
		$rotinaSQL -> bindParam(':data_nasc', $data_nasc);
		$rotinaSQL -> bindParam(':endereco', $endereco);
		$rotinaSQL -> bindParam(':bairro', $bairro);
		$rotinaSQL -> bindParam(':complemento', $complemento);
		$rotinaSQL -> bindParam(':cidade', $cidade);
		$rotinaSQL -> bindParam(':estado', $estado);
		$rotinaSQL -> bindParam(':cep', $cep);
		$rotinaSQL -> bindParam(':telefone', $telefone);
		$rotinaSQL -> bindParam(':celular', $celular);
		$rotinaSQL -> bindParam(':numero', $numero);
		$rotinaSQL -> execute();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		echo json_encode(array('status' => 'sucesso', 'mensagem' => 'Registro inserido com sucesso', 'dados' => $data));

	}

	public function delete_id($key) {

		$comandoSQL = 'DELETE FROM sis_solic
		WHERE uuid_solic = :uuid';
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('uuid', $key);
		$rotinaSQL -> execute();
		$numeroDeLinhas = $rotinaSQL -> rowCount();
		
		if ($numeroDeLinhas > 0) {
			echo json_encode(array('status' => 'sucesso', 'mensagem' => 'Registro excluido com sucesso'));
		} else {
			echo json_encode(array('status' => 'erro', 'mensagem' => 'Registro não encontrado'));
		}

	}

}
