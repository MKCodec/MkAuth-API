<?php

class contato {

	public function parametros($valor) {
		parse_str($valor, $saida);
		$pagina = isset($saida['pagina']) ? intval($saida['pagina']) : 1;
		$limite = isset($saida['limite']) ? intval($saida['limite']) : 500;
		$PaginaP = ($pagina == 0 ) ? 1 : $pagina;
		$padrao = ($PaginaP - 1) * $limite;
		return array('pagina' => $PaginaP, 'limite' => $limite, 'padrao' => $padrao);
	}

	public function get_listagem() {

		$comandoSQL = 'SELECT uuid_contato AS uuid, nome, assunto
		FROM sis_contato';
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetchAll();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		echo json_encode(array('contatos' => $resultadosSQL));

	}

	public function get_listar($valor) {
		$parametros = $this->parametros($valor);

		$countSQL = 'SELECT COUNT(*) AS total FROM sis_contato';
		$rotinaCount = DB::prepare($countSQL);
		$rotinaCount -> execute();
		$resultadosCount = $rotinaCount -> fetch();
		$total = intval($resultadosCount->total);
		$totalPaginas = ceil($total / $parametros['limite']);

		$comandoSQL = 'SELECT uuid_contato AS uuid, nome, assunto, msg, ip, email, login, telefone, data
		FROM sis_contato
		ORDER BY data DESC LIMIT :padrao, :limite';

		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('padrao', $parametros['padrao'], PDO::PARAM_INT);
		$rotinaSQL -> bindParam('limite', $parametros['limite'], PDO::PARAM_INT);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetchAll();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		$ConsultaLimite = ($parametros['pagina'] == $totalPaginas) ? $numeroDeLinhas : $parametros['limite'];

		if ($parametros['padrao'] >= $total) {
			echo json_encode(array('mensagem' => 'Pagina atual acima do limite de paginas'));
		} else {
			echo json_encode(array('total_registros' => $total , 'consulta_atual' => $ConsultaLimite, 'pagina_atual' => $parametros['pagina'], 'total_paginas' => $totalPaginas, 'contatos' => $resultadosSQL));
		}
		
	}

	public function get_show($valor) {

		$comandoSQL = 'SELECT *
		FROM sis_contato
		WHERE uuid_contato = :uuid
		LIMIT 1';
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('uuid', $valor);
		$rotinaSQL -> execute();
		$resultadosSQL = $rotinaSQL -> fetch();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		echo json_encode($resultadosSQL);

	}

	public function post_inserir($data) {

		$nome = $data->nome;
		$login = $data->login;
		$telefone = $data->numero;
		$assunto = $data->assunto;
		$msg = $data->msg;
		$ip = $_SERVER['REMOTE_ADDR'];
		$email = $data->email;

		$comandoSQL = "INSERT INTO sis_contato (uuid_contato, nome, assunto, msg, ip, email, login, telefone, data)
		VALUES (uuid(), :nome, :assunto, :msg, :ip, :email, :login, :telefone, now())";
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('nome', $nome);
		$rotinaSQL -> bindParam('login', $login);
		$rotinaSQL -> bindParam('telefone', $telefone);
		$rotinaSQL -> bindParam('assunto', $assunto);
		$rotinaSQL -> bindParam('msg', $msg);
		$rotinaSQL -> bindParam('ip', $ip);
		$rotinaSQL -> bindParam('email', $email);
		$rotinaSQL -> execute();

		echo json_encode(array('status'=> 'sucesso', 'dados' => $data));

	}

	public function put_editar($data) {

		$nome = $data->nome;
		$login = $data->login;
		$telefone = $data->telefone;
		$assunto = $data->assunto;
		$msg = $data->msg;
		$ip = $_SERVER['REMOTE_ADDR'];
		$email = $data->email;
		$uuid = $data->uuid;

		$comandoSQL = "UPDATE sis_contato
		SET nome = :nome, assunto = :assunto, msg = :msg, ip = :ip, email = :email, login = :login, telefone = :telefone
		WHERE uuid_contato = :uuid";
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('nome', $nome);
		$rotinaSQL -> bindParam('login', $login);
		$rotinaSQL -> bindParam('telefone', $telefone);
		$rotinaSQL -> bindParam('assunto', $assunto);
		$rotinaSQL -> bindParam('msg', $msg);
		$rotinaSQL -> bindParam('ip', $ip);
		$rotinaSQL -> bindParam('email', $email);
		$rotinaSQL -> bindParam('uuid', $uuid);
		$rotinaSQL -> execute();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		if($numeroDeLinhas > 0){
			echo json_encode(array('status' => 'sucesso', 'mensagem' => 'Contato editado com sucesso', 'dados' => $data));
		} else {
			echo json_encode(array('status' => 'erro', 'mensagem' => 'Contato não encontrado'));
		}

	}

	public function delete_id($key) {

		$comandoSQL = 'DELETE FROM sis_contato
		WHERE uuid_contato = :uuid';
		$rotinaSQL = DB::prepare($comandoSQL);
		$rotinaSQL -> bindParam('uuid', $key);
		$rotinaSQL -> execute();
		$numeroDeLinhas = $rotinaSQL -> rowCount();

		if ($numeroDeLinhas > 0) {
			echo json_encode(array('status' => 'sucesso', 'mensagem' => 'Registro excluido com sucesso'));
		} else {
			echo json_encode(array('status' => 'erro', 'mensagem' => 'Registro não encontrado'));
		}
		
	}

}
